version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: event-booking-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: event-booking
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - event-booking-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: event-booking-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/event-booking?authSource=admin
      JWT_SECRET: your_super_secret_jwt_key_change_in_production_2024
      JWT_EXPIRE: 30d
      CLIENT_URL: http://localhost:3000
      # Add your actual service credentials here
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME:-demo}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY:-demo}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET:-demo}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_demo}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-whsec_demo}
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USER: ${EMAIL_USER:-demo@gmail.com}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD:-demo}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - event-booking-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        VITE_API_URL: http://localhost:3000/api
        VITE_SOCKET_URL: http://localhost:3000
        VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY:-pk_test_demo}
    container_name: event-booking-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - event-booking-network

volumes:
  mongodb_data:

networks:
  event-booking-network:
    driver: bridge